<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport"
        content="width =device-width, initial-scale = 1.0, maximum-scale = 1.0, user-scalable = 0" />
  <title>猜电影</title>
</head>
<style>
  *{
    margin: 0;
    padding: 0;
    list-style: none;
    text-decoration: none
  }
  html, body{
    width: 100%;
    height: 100%;
  }
  .cover{
    width: 100% ;
    text-align: center;
  }
  #btn{
    border: 1px solid #00b600;
    padding: .4rem;
    border-radius: 5px;
    margin-top: 1.5rem;
    background: #fff;
    color: #00b600;
    font-size: 1rem;
    font-weight: 700;
  }
  .list{
    box-sizing: border-box;
    padding: 1rem .5rem;
    width: 100%;
    overflow: hidden;
  }
  .list>.item {
    width: 33.3333%;
    height: 12rem;
    box-sizing: border-box;
    padding: .5rem .2rem;
    float: left;
  }

  .list>.item>a{
    display: block;
    width: 100%;
    height: 100%;
  }

  .list>.item>a>.cover{
    width: 100%;
    height: 9rem;
  }
  .list>.item>a>.cover>img{
    display: block;
    width: 100%;
    height: 8.5rem;
  }
  .list>.item>a>.info>h3{
    text-align: center;
    font-size: .6rem;
    color: #494949;
  }
  .list>.item>a>.info>.rank{
    text-align: center;
    font-size: .6rem;
    color: #9b9b9b;
  }
  .page{
    box-sizing: border-box;
    padding: 1rem .5rem;
    width: 100%;
  }
   .page>.info{
    width: 100%;
    height: 7.6rem;
  }
   .page>.info>.right{
    float: right;
    width: 35%;
  }
   .page>.info>.right>a{
    display: block;
    width: 100%;
  }
   .page>.info>.right>a>img{
    display: block;
    width: 100%;
    height: 7.6rem
  }
   .page>.info>.left{
    float: left;
    width: 56%;
  }
   .page>.info>.left>p{
    font-size: .7rem;
    color: #494949;
  }
   .page>.info>.left>.rating{
    margin: .2rem 0 .8rem 0;
  }
   .page>.info>.left>.meta{
    font-size: .6rem;
    line-height: 1.1rem;
  }
   .page>.info>.left>.rating>span{
    color: lightgreen;
    margin: .2rem 0 .8rem 0;
  }
   .page>.info>.left>.rating>.ratingNum{
    margin-left: .5rem;
    color: #aaa;
  }
</style>
<body>
  <div class="cover">
    <button id="btn">点击开始录音</button>
  </div>
  <ul class="list">

  </ul>

  <script type="text/javascript" src="../public/js/rem.js"></script>
  <script type="text/javascript" src="http://res.wx.qq.com/open/js/jweixin-1.2.0.js"></script>
  <script type="text/javascript" src="https://cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script>
  <script type="text/javascript">
      window.onload = function () {
        const btn = document.getElementById('btn')
        const list = document.querySelector('.list')
        wx.config({
          debug: false, // 开启调试模式,调用的所有api的返回值会在客户端alert出来，若要查看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
          appId: 'wx566163e38e5a7cad', // 必填，公众号的唯一标识
          timestamp: '<%= obj.timestamp %>', // 必填，生成签名的时间戳
          nonceStr: '<%= obj.noncestr %>', // 必填，生成签名的随机串
          signature: '<%= obj.signature %>',// 必填，签名
          jsApiList: [
            'startRecord',
            'stopRecord',
            'translateVoice',  //语音识别
          ] // 必填，需要使用的JS接口列表
        })

        wx.ready(function(){
          // config信息验证后会执行ready方法，所有接口调用都必须在config接口获得结果之后，
          // config是一个客户端的异步操作，所以如果需要在页面加载时就调用相关接口，
          // 则须把相关接口放在ready函数中调用来确保正确执行。
          // 对于用户触发时才调用的接口，则可以直接调用，不需要放在ready函数中。

          wx.checkJsApi({
            jsApiList: ['startRecord', 'stopRecord', 'translateVoice'], // 需要检测的JS接口列表，所有JS接口列表见附录2,
            success: function(res) {
              // 以键值对的形式返回，可用的api值true，不可用为false
              // 如：{"checkResult":{"chooseImage":true},"errMsg":"checkJsApi:ok"}
              console.log('checkJsApi = ' + res.errMsg)
            }
          })

        })

        wx.error(function(res){
          // config信息验证失败会执行error函数，如签名过期导致验证失败，
          // 具体错误信息可以打开config的debug模式查看，也可以在返回的res参数中查看，对于SPA可以在这里更新签名。
          // console.log('config error')
        })


        let isRecord = false

        btn.addEventListener('touchend', () => {
          if (isRecord) {
            isRecord = false
            //用户再次点击标题时，开始录音
            wx.stopRecord({
              success: res => {
                const localId = res.localId

                wx.translateVoice({
                  localId: localId, // 需要识别的音频的本地Id，由录音相关接口获得
                  isShowProgressTips: 1, // 默认为1，显示进度提示
                  success: function (res) {
                    // alert(res.translateResult); // 语音识别的结果
                    const result = res.translateResult
                    let html = ''
                    $.getJSON('https://api.douban.com/v2/movie/search?q=' + result + '&callback=?', function (data) {
                      data.subjects.forEach((item, index) => {
                        if (index >= 9) {
                          return
                        }
                        html += '<li class="item">\n' +
                        '      <a href="/details?id=' + item.id + '">\n' +
                        '        <div class="cover">\n' +
                        '          <img src="' + item.images.small + '" alt="' + item.title + '">\n' +
                        '        </div>\n' +
                        '        <div class="info">\n' +
                        '          <h3>' + item.title + '</h3>\n' +
                        '          <p class="rank">\n' +
                        '            <span>评分:</span>\n' +
                        '            <span class="rating">' + item.rating.average + '</span>\n' +
                        '          </p>\n' +
                        '        </div>\n' +
                        '      </a>\n' +
                        '    </li>'
                      })
                      list.innerHTML = html
                    })
                  }
                })
              }
            })
          } else {
            isRecord = true
            //用户点击标题时，开始录音
            wx.startRecord({
              success: function () {
                alert('开始录音')
              }
            })
          }
        })
      }
  </script>
</body>
</html>